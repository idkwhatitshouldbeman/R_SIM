# Render deployment configuration for R_SIM Rocket Simulation Platform
# Note: Heavy CFD simulations run on Google Cloud Functions, not Render
# Storage is handled by Supabase, not Render
services:
  - type: web
    name: r-sim
    env: python
    plan: starter  # Free tier - only handles web API, not CFD
    buildCommand: |
      echo "=== DIAGNOSTIC: Starting build process ==="
      echo "Current directory: $(pwd)"
      echo "Directory contents: $(ls -la)"
      echo "Frontend directory exists: $(test -d frontend && echo 'YES' || echo 'NO')"
      echo "Backend directory exists: $(test -d backend && echo 'YES' || echo 'NO')"
      
      echo "=== DIAGNOSTIC: Installing Node.js ==="
      curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
      apt-get install -y nodejs
      echo "Node.js version: $(node --version)"
      echo "NPM version: $(npm --version)"
      
      echo "=== DIAGNOSTIC: Installing Python dependencies ==="
      pip install -r backend/requirements.txt
      
      echo "=== DIAGNOSTIC: Building frontend ==="
      echo "Frontend directory contents: $(ls -la frontend/)"
      echo "Package.json exists: $(test -f frontend/package.json && echo 'YES' || echo 'NO')"
      
      cd frontend
      echo "Current directory after cd: $(pwd)"
      echo "Installing frontend dependencies..."
      npm install
      echo "Frontend dependencies installed"
      echo "Building frontend..."
      npm run build
      echo "Frontend build completed"
      echo "Frontend dist contents: $(ls -la dist/)"
      cd ..
      
      echo "=== DIAGNOSTIC: Final verification ==="
      echo "Frontend dist exists: $(test -d frontend/dist && echo 'YES' || echo 'NO')"
      echo "Frontend dist contents: $(ls -la frontend/dist/)"
      echo "=== DIAGNOSTIC: Build process complete ==="
    startCommand: python backend/f_backend.py
    envVars:
      - key: FLASK_ENV
        value: production
      - key: FLASK_DEBUG
        value: false
      - key: PORT
        value: 5000
      - key: PYTHONPATH
        value: /opt/render/project/src
      - key: SIMULATION_MODE
        value: cloud  # Forces use of Google Cloud Functions for CFD
    healthCheckPath: /api/health
